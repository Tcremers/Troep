%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.3.1
%%CreationDate: Sun Jan 22 18:52:35 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: --noLP 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (sequence1)
} def

/sequence { (\
AUCGGUUCCAGCAGGAACUGUACUCGGGGGCUCGGGAAACCCUCCCGGGGUUUUACCCGGGUUUUUACGU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 21 0.174419116 ubox
1 24 0.015936142 ubox
1 63 0.003609552 ubox
1 64 0.003627587 ubox
1 65 0.003669005 ubox
1 66 0.006120529 ubox
1 70 0.010555759 ubox
2 20 0.025873483 ubox
2 27 0.005353101 ubox
2 69 0.011158245 ubox
3 20 0.963067864 ubox
3 26 0.008778976 ubox
3 69 0.016380893 ubox
4 19 0.994732334 ubox
4 25 0.008176546 ubox
4 68 0.015268833 ubox
5 18 0.999902333 ubox
5 23 0.004546179 ubox
6 17 0.999476892 ubox
6 22 0.004468640 ubox
7 16 0.999621379 ubox
8 15 0.999960213 ubox
9 14 0.998518681 ubox
9 20 0.004558698 ubox
10 19 0.004568082 ubox
11 18 0.004546372 ubox
11 21 0.003838787 ubox
12 20 0.003960934 ubox
13 19 0.003953150 ubox
14 18 0.003866677 ubox
18 27 0.003519025 ubox
19 26 0.005095388 ubox
19 67 0.008135394 ubox
19 69 0.045075344 ubox
20 25 0.013648735 ubox
20 66 0.014061982 ubox
20 68 0.132696066 ubox
21 67 0.135194338 ubox
21 69 0.012808200 ubox
22 62 0.778309017 ubox
22 66 0.091385503 ubox
22 70 0.231735723 ubox
23 29 0.010935860 ubox
23 36 0.012327776 ubox
23 60 0.019472539 ubox
23 61 0.843052788 ubox
23 69 0.260850048 ubox
24 28 0.009936914 ubox
24 35 0.012427613 ubox
24 59 0.003384124 ubox
24 60 0.843452012 ubox
24 61 0.003256943 ubox
25 34 0.012594637 ubox
25 47 0.005353907 ubox
25 59 0.844520394 ubox
25 60 0.004812834 ubox
25 69 0.215665442 ubox
26 33 0.012603300 ubox
26 42 0.012066103 ubox
26 43 0.024987410 ubox
26 44 0.009873429 ubox
26 46 0.005763025 ubox
26 57 0.005608702 ubox
26 58 0.844576643 ubox
26 64 0.007194301 ubox
26 65 0.020026924 ubox
26 66 0.393435174 ubox
26 68 0.219773249 ubox
26 70 0.003637745 ubox
27 32 0.009846027 ubox
27 41 0.012066838 ubox
27 42 0.026809354 ubox
27 43 0.013799299 ubox
27 45 0.005771132 ubox
27 53 0.006188523 ubox
27 56 0.007818431 ubox
27 57 0.844511677 ubox
27 58 0.008471960 ubox
27 63 0.005661596 ubox
27 64 0.021207850 ubox
27 65 0.472898532 ubox
27 66 0.042023765 ubox
28 40 0.012048202 ubox
28 41 0.026820926 ubox
28 42 0.014226676 ubox
28 44 0.005777091 ubox
28 52 0.058192096 ubox
28 53 0.028206318 ubox
28 54 0.007045825 ubox
28 56 0.841616016 ubox
28 57 0.011092224 ubox
28 63 0.018006151 ubox
28 64 0.506942620 ubox
28 65 0.044507272 ubox
28 66 0.027653766 ubox
29 40 0.026815423 ubox
29 41 0.014232868 ubox
29 43 0.005755008 ubox
29 51 0.558194104 ubox
29 52 0.268121919 ubox
29 53 0.051919576 ubox
29 54 0.066605623 ubox
29 56 0.012904641 ubox
29 62 0.013470117 ubox
29 63 0.522956656 ubox
29 64 0.037248954 ubox
29 65 0.033312928 ubox
29 66 0.005326473 ubox
30 40 0.014191439 ubox
30 42 0.005637810 ubox
30 51 0.279887662 ubox
30 52 0.050770334 ubox
30 53 0.078734491 ubox
30 62 0.532421895 ubox
30 63 0.026811403 ubox
30 64 0.009407318 ubox
31 48 0.011875746 ubox
31 49 0.806949843 ubox
31 50 0.247516124 ubox
31 60 0.004455713 ubox
31 61 0.534048256 ubox
32 48 0.818898899 ubox
32 49 0.202216805 ubox
32 60 0.533716004 ubox
33 47 0.831778152 ubox
33 48 0.145248624 ubox
33 59 0.534011842 ubox
34 41 0.005952453 ubox
34 42 0.005672490 ubox
34 46 0.843717468 ubox
34 57 0.009865687 ubox
34 58 0.533977045 ubox
35 40 0.005978605 ubox
35 41 0.005737193 ubox
35 42 0.003536100 ubox
35 44 0.003616666 ubox
35 45 0.843816543 ubox
35 46 0.034901296 ubox
35 56 0.013871300 ubox
35 57 0.533843637 ubox
36 40 0.005657713 ubox
36 41 0.003826129 ubox
36 43 0.003346150 ubox
36 44 0.843759360 ubox
36 45 0.034648793 ubox
36 53 0.003387478 ubox
36 54 0.085269854 ubox
36 56 0.525844676 ubox
37 43 0.818237004 ubox
37 52 0.014067970 ubox
37 53 0.432432803 ubox
37 54 0.160462291 ubox
37 66 0.003301394 ubox
38 51 0.009676897 ubox
38 52 0.511814254 ubox
38 53 0.131473382 ubox
38 54 0.029790380 ubox
38 65 0.003455197 ubox
39 51 0.524633323 ubox
39 52 0.093449688 ubox
39 53 0.015158952 ubox
39 62 0.003177398 ubox
39 64 0.003276632 ubox
40 49 0.029976364 ubox
40 50 0.533202622 ubox
41 48 0.033975698 ubox
41 49 0.532967903 ubox
41 50 0.013944907 ubox
42 47 0.037458596 ubox
42 48 0.532577455 ubox
42 49 0.014165864 ubox
43 47 0.479791117 ubox
43 48 0.013217886 ubox
44 61 0.033686665 ubox
45 60 0.035430750 ubox
46 59 0.035463881 ubox
47 58 0.035596943 ubox
48 57 0.035589751 ubox
48 58 0.005074584 ubox
49 56 0.035565977 ubox
49 57 0.005196880 ubox
50 56 0.005705907 ubox
51 55 0.005759526 ubox
61 68 0.023584107 ubox
62 67 0.024236305 ubox
62 69 0.004743104 ubox
3 20 0.9500000 lbox
4 19 0.9500000 lbox
5 18 0.9500000 lbox
6 17 0.9500000 lbox
7 16 0.9500000 lbox
8 15 0.9500000 lbox
9 14 0.9500000 lbox
22 62 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
showpage
end
%%EOF
